rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // === DENY ALL BY DEFAULT ===
    // This ensures nothing is accessible unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }
    
    // === USER DATA ===
    // Users can ONLY access their own data
    match /users/{userId} {
      // Only allow if:
      // 1. User is authenticated (request.auth != null)
      // 2. User's ID matches the document ID (request.auth.uid == userId)
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // === USER'S QUIZ SESSIONS ===
      match /quiz_sessions/{sessionId} {
        // Only allow owner to access their quiz sessions
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Additional validation: Ensure the userId field matches
        allow create: if request.auth != null 
                      && request.auth.uid == userId
                      && request.resource.data.userId == userId;
        
        allow update: if request.auth != null 
                      && request.auth.uid == userId
                      && resource.data.userId == userId;
      }
      
      // === USER'S FLASHCARDS ===
      match /flashcards/{flashcardId} {
        // Only allow owner to access their flashcards
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Validate data structure on write
        allow create, update: if request.auth != null 
                              && request.auth.uid == userId
                              && request.resource.data.keys().hasAll(['flashcards', 'lastUpdated']);
      }
      
      // === USER'S STATISTICS ===
      match /statistics/{statId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // === PUBLIC QUIZ DATA ===
    // All authenticated users can READ quiz questions
    // NO ONE can write from the client (only via Firebase Admin SDK)
    match /quizzes/{quizId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
  }
}